{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Core Backend Secrets",
  "type": "object",
  "required": [
    "pg_user",
    "pg_password",
    "jwt_secret",
    "tenant_id"
  ],
  "properties": {
    "pg_user": {
      "type": "string",
      "description": "PostgreSQL database user"
    },
    "pg_password": {
      "type": "string",
      "description": "PostgreSQL database password"
    },
    "pg_ca_cert": {
      "type": "string",
      "description": "PostgreSQL CA certificate for SSL connection"
    },
    "pg_client_cert": {
      "type": "string",
      "description": "PostgreSQL client certificate for SSL connection"
    },
    "pg_client_key": {
      "type": "string",
      "description": "PostgreSQL client private key for SSL connection"
    },
    "jwt_secret": {
      "type": "string",
      "description": "Secret key used to sign and verify API JWTs (min 32 chars)",
      "minLength": 32
    },
    "internal_jwt_secret": {
      "type": "string",
      "description": "Secret key for internal service-to-service JWTs",
      "minLength": 32
    },
    "tenant_id": {
      "type": "string",
      "description": "Tenant identifier for multi-tenant data segregation"
    },
    "tenant_name": {
      "type": "string",
      "description": "Human-readable tenant name"
    },
    "core_services_username": {
      "type": "string",
      "description": "Username for core-services to authenticate",
      "default": "core-services"
    },
    "core_services_password_hash": {
      "type": "string",
      "description": "Bcrypt hash of core-services password",
      "pattern": "^\\$2[aby]\\$\\d{2}\\$[./A-Za-z0-9]{53}$"
    },
    "admin_username": {
      "type": "string",
      "description": "Admin username for management access",
      "default": "admin"
    },
    "admin_password_hash": {
      "type": "string",
      "description": "Bcrypt hash of admin password",
      "pattern": "^\\$2[aby]\\$\\d{2}\\$[./A-Za-z0-9]{53}$"
    },
    "api_key_services": {
      "type": "string",
      "description": "API key for core-services authentication (alternative to JWT)",
      "minLength": 32
    },
    "postgrest_anon_key": {
      "type": "string",
      "description": "PostgREST anonymous JWT key (for future use)"
    },
    "postgrest_service_key": {
      "type": "string",
      "description": "PostgREST service JWT key with elevated privileges (for future use)"
    }
  },
  "additionalProperties": false
}